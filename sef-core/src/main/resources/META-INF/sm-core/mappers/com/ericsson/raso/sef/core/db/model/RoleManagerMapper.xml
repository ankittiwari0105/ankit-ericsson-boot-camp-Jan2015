<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ericsson.sm.core.db.mapper.RoleManagerMapper">


	<resultMap type="com.ericsson.sm.core.db.model.RoleProviderDto"
		id="RoleProviderDtoResult">
		<result column="PROVIDER_ID" property="providerId"></result>
		<collection property="roleIdList" javaType="java.util.ArrayList" ofType="String">
			<result column="role_name" />
		</collection>
	</resultMap>

	<resultMap type="com.ericsson.sm.core.db.model.RolePermissionDto"
		id="RolePermissionDtoResult">
		<result column="ROLE_NAME" property="role_name" />
		<result column="PERMISSION_ID" property="permission_id" />
	</resultMap>

	<resultMap type="Role" id="RoleMappingResult">
		<result column="role_name" property="roleName" />
	</resultMap>

	<resultMap type="Permission" id="PermissionMappingResult">
		<result column="permission_id" property="permissionId" />
		<result column="permission_name" property="permissionName" />
	</resultMap>

	<resultMap type="RolePermissionMappingDto" id="RolePermissionMappingResult">
		<result column="ROLE_NAME" property="roleName"></result>
		<collection property="permissionIdList" javaType="java.util.ArrayList"
			ofType="String">
			<result column="permission_id" />
		</collection>
	</resultMap>

	<resultMap type="RoleAssignDto" id="RoleAssignResult">
		<result column="provider_id" property="id" />
		<collection property="roleIdList" javaType="java.util.ArrayList"
			ofType="String">
			<result column="role_name" />
		</collection>
	</resultMap>


	<select id="getPermissionsbyRoleId" resultMap="RolePermissionMappingResult"
		parameterType="String">
		select rp.role_name,rp.permission_id from
		roles_permissions rp inner join
		role_types rt on rp.role_name=rt.role_name
		where rp.role_name=#{roleName}
	</select>

	<select id="getAllProviderRoles" resultMap="RoleProviderDtoResult"
		parameterType="String">
		SELECT pr.role_name ,pr.PROVIDER_ID
		from
		provider_role pr inner join
		provider p on pr.provider_id=p.provider_id
		where pr.provider_id=#{providerId}

	</select>

	<select id="getPermissionId" resultType="String">
		select permission_id
		from provider_permissions
		where permission_name=#{permission_name}
	</select>

	<select id="getAssignRoles" resultMap="RoleAssignResult"
		parameterType="String">
		select provider_id,role_name from provider_role
		where
		provider_id=#{providerId}
	</select>

	<select id="getAllRoles_Permissions" resultMap="RolePermissionDtoResult">
		select rp.ROLE_NAME,rp.PERMISSION_ID
		from roles_permissions rp 
		inner join 
		role_types rt
		on rp.role_name=rt.role_name
	</select>

	<select id="getAllPermissions" resultMap="PermissionMappingResult">
		select
		permission_id,permission_name
		from provider_permissions
	</select>

	<select id="getAllRoleTypes" resultMap="RoleMappingResult">
		select role_name from role_types
	</select>

	<select id="validateProvider" parameterType="map" resultType="int">
		select COUNT(p.provider_id) as value from provider p
		where
		p.provider_id=#{provider_id} and p.password=#{provider_pwd}
	</select>

	<insert id="createRoleIdMapping" parameterType="map">
		insert into
		provider_role(provider_id,role_name) values
		(#{provider_id jdbcType=VARCHAR},
		 #{roleName jdbcType=VARCHAR})
	</insert>

	<insert id="createRolePermissionMapping" parameterType="map">
		insert
		into
		roles_permissions (role_name,permission_id) values
		(#{roleName jdbcType=VARCHAR},
		#{permission_id jdbcType=VARCHAR})
	</insert>


	<insert id="insertRoleValue" parameterType="Role">
		insert into
		role_types(role_name) values
		(#{roleName jdbcType=VARCHAR})
	</insert>


	<insert id="insertPermissionValue" parameterType="Permission">
		insert into
		provider_permissions(permission_id,permission_name)
		values
		(#{permissionId jdbcType=VARCHAR},
		#{permissionName jdbcType=VARCHAR})
	</insert>

	<delete id="removeRole" parameterType="String">
		delete from role_types
		where role_name=#{roleName}
	</delete>

	<delete id="removePermission" parameterType="String">
		delete from
		provider_permissions where permission_id=#{permissionId}
	</delete>

	<update id="updateRole" parameterType="Role">

		update role_types set
		role_name=#{roleName jdbcType=VARCHAR}
		where role_name=#{roleName}

	</update>

	<update id="updatePermission" parameterType="Permission">
		update
		provider_permissions set permission_name=#{permissionName
		jdbcType=VARCHAR}
		where permission_id=#{permissionId}
	</update>

	<delete id="removeAssignRoles" parameterType="String">
		delete from
		provider_role where provider_id=#{roleName}
	</delete>

	<delete id="removeRolePermissionMappings" parameterType="String">

		delete from roles_permissions where role_name=#{roleName}

	</delete>

	<select id="getUserPermission" parameterType="String" resultType="String">
		select distinct permission_name 
		from provider_permissions a, roles_permissions b, provider_role c
		where a.permission_id = b.permission_id
		and  c.role_name = b.role_name
		and c.provider_id =#{providerId}
	</select>

</mapper>