<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ericsson.sm.core.db.mapper.AgreementMapper">
		
	<resultMap id="AgreementResult" type="Agreement">
		<id property="agreementId" column="agreement_id" />
		<result property="providerId" column="provider_id" />
		<result property="agreementName" column="agreement_name" />
		<result property="agreementType" column="agreement_type" />
		<result property="createdTime" column="created_time" />
		<result property="lastModified" column="last_modified" />
		<result property="state" column="state" />
	</resultMap>

	
	<select id="agreementSequence" resultType="long">
		select agreement_sequence.nextval from dual 
	</select>	
	
	<resultMap id="AllAgreementResult" type="Agreement">
		
		<result property="agreementId" column="AGREEMENT_ID" />
		<result property="providerId" column="provider_id" />
		<result property="agreementName" column="agreement_name" />
		<result property="agreementType" column="agreement_type" />
		<result property="createdTime" column="created_time" />
		<result property="lastModified" column="last_modified" />
		<result property="state" column="state" />
	</resultMap>
	
	<resultMap id="AllAgreementWithMeta" type="AgreementDto">
		<result property="agreementId" column="AGREEMENT_ID" />
		<result property="providerId" column="provider_id" />
		<result property="agreementName" column="agreement_name" />
		<result property="sla" column="sla" />
	</resultMap>
	
	
	<select id="getAllAgreementsWithMeta" resultMap="AllAgreementWithMeta">
		select a.AGREEMENT_ID,a.PROVIDER_ID,a.AGREEMENT_NAME,m.VALUE sla 
		from agreement a,agreement_meta m 
		where m.agreement_id = a.agreement_id
	</select>
	
	<select id="getProviderSla" resultType="map" parameterType="String">
		select m.VALUE sla 
		from agreement a,agreement_meta m 
		where a.PROVIDER_ID = #{providerId} and  m.agreement_id = a.agreement_id  and m.meta = #{slaMeta}
	</select>
	
	<select id="getAllAgreements" resultMap="AllAgreementResult">
		select * from agreement
	</select>
	
	<resultMap id="AgreementMetaResult" type="AgreementMeta">
		<id property="agreementId" column="agreement_id" />
		<result property="key" column="meta" />
		<result property="value" column="value" />
	</resultMap>
	
	<resultMap id="AllAgreementMetaResult" type="AgreementMeta">
		<result property="agreementId" column="agreementId" />
		<result property="key" column="meta" />
		<result property="value" column="value" />
	</resultMap>

	<select id="getAllAgreementMetas" resultMap="AllAgreementMetaResult">
		select * from agreement_meta
	</select>

	<select id="getAgreementByAgreementId" resultMap="AgreementResult" parameterType="String">
		select a.agreement_id, a.provider_id, a.agreementName, a.agreement_type, a.created_time, a.last_modified, a.state
		from agreement a
		where agreement_id = #{agreementId}
	</select>
	
	<select id="getAgreementMetaByAgreementId" resultMap="AgreementMetaResult" parameterType="String">
		select a.agreement_id , a.meta , a.value
		from agreement_meta a
		where agreement_id = #{agreementId}
	</select>
	
	<insert id="insertAgreementMeta" parameterType="AgreementMeta" >
		insert into agreement_meta (agreement_id,meta,value)
		values
		(#{agreementId jdbcType=VARCHAR},
		#{key jdbcType=VARCHAR},
		#{value jdbcType=VARCHAR})
	</insert>
	
	<insert id="insertAgreement" parameterType="Agreement" >
		insert into agreement (agreement_id,provider_id, agreement_name,agreement_type, created_time, last_modified, state)
		values
		(#{agreementId jdbcType=VARCHAR},
		#{providerId jdbcType=VARCHAR},
		#{agreementName jdbcType=VARCHAR},
		#{agreementType jdbcType=VARCHAR},
		#{createdTime jdbcType=TIMESTAMP},
		#{lastModified jdbcType=TIMESTAMP},
		#{state jdbcType=VARCHAR})
	</insert>
	
	<update id="updateAgreement" parameterType="Agreement">
		update agreement 
		<set>
		<if test="agreementId != null">agreement_id=#{agreementId jdbcType=VARCHAR},</if>
		<if test="providerId != null">provider_id=#{providerId jdbcType=VARCHAR},</if>
		<if test="agreementName != null">agreement_name=#{agreementName jdbcType=VARCHAR},</if>
		<if test="agreementType != null">agreement_type=#{agreementType jdbcType=VARCHAR},</if>
		<if test="createdTime != null"> created_time=#{createdTime jdbcType=TIMESTAMP},</if>
		<if test="lastModified != null"> last_modified=#{lastModified jdbcType=TIMESTAMP},</if>
		<if test="state != null"> state=#{state jdbcType=VARCHAR}</if>
		</set>
		where agreement_id = #{agreementId}
	</update>
	
	<update id="updateAgreementMeta" parameterType="AgreementMeta">
		update agreement_meta set
		agreement_id=#{agreementId jdbcType=VARCHAR},
		meta=#{key jdbcType=VARCHAR},
		value=#{value jdbcType=VARCHAR}

		where agreement_id = #{agreementId}
	</update>
	
	<delete id="deleteAgreement" parameterType="String">
		delete from agreement where agreement_id = #{agreementId}
	</delete>

	<delete id="deleteAgreementMeta" parameterType="String">
		delete from agreement_meta where agreement_id = #{agreementId}
	</delete>
</mapper>
