<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ericsson.raso.sef.core.db.mapper.ProviderMapper">

	<resultMap id="ProviderSLARequestResult" type="ProviderSLARequest">
		<result property="providerName" column="partner_name" />
		<result property="allowedRequests" column="value" />
	</resultMap>

	<resultMap id="AllProviderResult" type="Provider">
		<result property="providerId" column="provider_id" />
		<result property="partnerName" column="partner_name" />
		<result property="password" column="password" />
		<result property="createdTime" column="create_time" />
		<result property="lastModified" column="last_modified" />
		<result property="status" column="status"/>
		<result property="loginCount" column="login_count"/>
		<result property="state" column="state" />
		<result property="passwordModified" column="password_modified" />
	</resultMap>



	<select id="getAllProvider" resultMap="AllProviderResult">
		select * from provider p
	</select>

	<select id="getSLAAllowedRequestsForProvider" resultMap="ProviderSLARequestResult">
		select
		p.partner_name as partner_name, am.value as value from agreement_meta
		am
		left join agreement a on a.agreement_id = am.agreement_id
		left join
		provider p on p.provider_id = a.provider_id
		where a.agreement_name =
		'SLA'
		and am.meta = 'ProviderRequests';
	</select>


	<select id="getSLATotalAllowedRequests" resultType="String">
		select value
		from agreement_meta am
		left join agreement a on a.agreement_id =
		am.agreement_id
		where a.agreement_name = 'SLA'
		and am.meta = 'TotalAllowedRequests';
	</select>

	<resultMap id="ProviderResult" type="Provider">
		<id property="providerId" column="provider_id" />
		<result property="partnerName" column="partner_name" />
		<result property="password" column="password" />
		<result property="createdTime" column="created_time" />
		<result property="lastModified" column="last_modified" />
		<result property="state" column="state" />
		<result property="status" column="status" />
		<result property="passwordModified" column="password_modified" />
	</resultMap>

	<resultMap id="ProviderMetaResult" type="ProviderMeta">
		<id property="providerId" column="provider_id" />
		<result property="key" column="meta" />
		<result property="value" column="value" />
	</resultMap>

	<select id="getProviderByProviderId" resultMap="ProviderResult"
		parameterType="String">
		select p.provider_id , p.partner_name , p.password ,
		p.created_time , p.last_modified , p.state , p.status , p.password_modified
		from provider p
		where
		provider_id = #{providerId}
	</select>

	<select id="getProviderMetaByProviderId" resultMap="ProviderMetaResult"
		parameterType="String">
		select p.provider_id , p.meta , p.value
		from
		provider_meta p
		where provider_id = #{providerId}
	</select>

	<insert id="insertProviderMeta" parameterType="ProviderMeta">
		insert into provider_meta (provider_id,meta,value)
		values
		(#{providerId
		jdbcType=VARCHAR},
		#{key jdbcType=VARCHAR},
		#{value jdbcType=VARCHAR})
	</insert>

	<insert id="insertProvider" parameterType="Provider">
		insert into
		provider (provider_id,partner_name, password, created_time,
		last_modified, state, status , login_count , password_modified)
		values
		(#{providerId jdbcType=VARCHAR},
		#{partnerName jdbcType=VARCHAR},
		#{password jdbcType=VARCHAR},
		#{createdTime jdbcType=TIMESTAMP},
		#{lastModified jdbcType=TIMESTAMP},
		#{state jdbcType=VARCHAR},
		#{status jdbcType=VARCHAR},
		#{loginCount jdbcType=VARCHAR},
		#{passwordModified jdbcType=TIMESTAMP})
	</insert>

	<update id="updateProvider" parameterType="Provider">
		update provider
		<set>
			<if test="providerId != null">provider_id=#{providerId jdbcType=VARCHAR},</if>
			<if test="partnerName != null">partner_name=#{partnerName jdbcType=VARCHAR},</if>
			<if test="password != null">password=#{password jdbcType=VARCHAR},</if>
			<if test="createdTime != null"> created_time=#{createdTime jdbcType=TIMESTAMP},</if>
			<if test="lastModified != null"> last_modified=#{lastModified jdbcType=TIMESTAMP},</if>
			<if test="state != null"> state=#{state jdbcType=VARCHAR},</if>
			<if test="status != null"> status=#{status jdbcType=VARCHAR},</if>
			<if test="loginCount != null"> login_count=#{loginCount jdbcType=VARCHAR},</if>
			<if test="passwordModified != null"> password_modified=#{passwordModified jdbcType=TIMESTAMP}</if>
		</set>
		where provider_id = #{providerId}
	</update>

	<update id="updateProviderMeta" parameterType="ProviderMeta">
		update provider_meta
		<set>
			<if test="providerId != null">provider_id=#{providerId jdbcType=VARCHAR},</if>
			<if test="key != null">meta=#{key jdbcType=VARCHAR},</if>
			<if test="value != null">value=#{value jdbcType=VARCHAR}</if>
		</set>
		where provider_id = #{providerId}
	</update>

	<delete id="deleteProvider" parameterType="String">
		delete
		from provider
		where provider_id = #{providerId}
	</delete>

	<delete id="deleteProviderMeta" parameterType="String">
		delete
		from provider_meta
		where provider_id = #{providerId}
	</delete>

<select id="getProviderLoginCount" resultMap="AllProviderResult" parameterType="String">
	select
	login_count,status
	from provider where provider_id=#{providerId}
</select>

	<update id="updateProviderPassword" parameterType="Provider" >
		update
		provider set password=#{password
		jdbcType=VARCHAR}
		where provider_id=#{providerId}
	</update>


	<update id="updateProviderStatus" parameterType="Provider">
		update
		provider set status=#{status jdbcType=VARCHAR},
		login_count=#{loginCount jdbcType=VARCHAR}
		where provider_id=#{providerId}

	</update>
</mapper>
