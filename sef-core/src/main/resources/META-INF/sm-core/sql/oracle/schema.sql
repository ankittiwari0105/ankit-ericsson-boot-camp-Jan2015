CREATE SEQUENCE USER_ID_SEQUENCE
 START WITH     1
 INCREMENT BY   1
 CACHE 1000
 NOCYCLE; 
 
CREATE SEQUENCE COMMERCE_TRAIL_SEQUENCE
 START WITH     1
 INCREMENT BY   1
 CACHE 1000
 NOCYCLE; 
 
CREATE SEQUENCE PURCHASE_SEQUENCE
 START WITH     1
 INCREMENT BY   1
 CACHE 1000
 NOCYCLE; 
 
CREATE SEQUENCE SCHEDULED_REQUEST_SEQUENCE
 START WITH     1
 INCREMENT BY   1
 CACHE 1000
 NOCYCLE;

CREATE SEQUENCE CALLING_CIRCLE_SEQUENCE
 START WITH     1
 INCREMENT BY   1
 CACHE 1000
 NOCYCLE;
 
 CREATE SEQUENCE AGREEMENT_SEQUENCE
 START WITH     1
 INCREMENT BY   1
 CACHE 1000
 NOCYCLE; 
 
 CREATE SEQUENCE PROVIDER_ROLE_SEQ
 START WITH     1
 INCREMENT BY   1
 CACHE 1000
 NOCYCLE; 
 
 CREATE SEQUENCE ROLES_PERMISSIONS_SEQ
 START WITH     1
 INCREMENT BY   1
 CACHE 1000
 NOCYCLE;

CREATE TABLE SUBSCRIBER (
    USER_ID NUMBER(30,0) NOT NULL,
    ACCOUNT_ID NUMBER(30,0),
    CUSTOMER_ID  NUMBER(30,0),
    CONTRACT_ID  NUMBER(30,0),
    MSISDN VARCHAR(20) NOT NULL,
    CONTRACT_STATE VARCHAR(20),
    PIN VARCHAR(10),
    EMAIL VARCHAR(30),
    IMSI VARCHAR(30),
    IMEI_SV VARCHAR(30),
    PAYMENT_TYPE VARCHAR(10),
    PAYMENT_RESPONSIBLE VARCHAR(20),
    PAYMENT_PARENT VARCHAR(20),
    BILL_CYCLE_DAY VARCHAR(2),
    DATE_OF_BIRTH TIMESTAMP (6),
    GENDER VARCHAR(6),
    PREFERRED_LANGUAGE VARCHAR(6),
    REGISTRATION_DATE TIMESTAMP (6),
    ACTIVE_DATE TIMESTAMP (6),
    CREATED TIMESTAMP (6),
    LAST_MODIFIED TIMESTAMP (6),
    RATE_PLAN VARCHAR(30),
    CUSTOMER_SEGMENT VARCHAR(30),
    DELETED NUMBER(30,0)
)
PARTITION BY HASH (USER_ID) PARTITIONS 32
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;

CREATE TABLE SUBSCRIBER_META (
    USER_ID NUMBER(30,0) NOT NULL,
    ATTRIBUTE_NAME VARCHAR (50) NOT NULL,
    ATTRIBUTE_VALUE VARCHAR (255),
    LAST_MODIFIED TIMESTAMP (6),
    CREATED TIMESTAMP (6)        
)
PARTITION BY HASH (USER_ID) PARTITIONS 32
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;
 
CREATE TABLE SUBSCRIBER_HISTORY (
	USER_ID NUMBER(30,0) NOT NULL,
	EVENT_TIMESTAMP TIMESTAMP (6) NOT NULL,
	ATTRIBUTE_NAME VARCHAR (50) NOT NULL,
	ATTRIBUTE_OLD_VALUE VARCHAR (255),
	ATTRIBUTE_NEW_VALUE VARCHAR (255),
	CHANGE_BY_PROVIDER_ID VARCHAR(255),
	CHANGE_BY_SERVICE_ID NUMBER(30,0)
) 
PARTITION BY HASH (USER_ID) PARTITIONS 32
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;

CREATE TABLE PROVIDER (
	PROVIDER_ID VARCHAR (255) NOT NULL,
	PARTNER_NAME VARCHAR (50),
	PASSWORD VARCHAR (50),
	CREATED_TIME TIMESTAMP (6),
	LAST_MODIFIED TIMESTAMP (6),
	LOGIN_COUNT NUMBER(4,0),
	PASSWORD_MODIFIED TIMESTAMP (6),
	STATE VARCHAR (255),
	STATUS VARCHAR (255)		
)
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;

CREATE TABLE PROVIDER_META (
	PROVIDER_ID VARCHAR (255) NOT NULL,
	META VARCHAR (30) NOT NULL,
	VALUE VARCHAR (255)
)
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;
 
CREATE TABLE PROVIDER_PERMISSIONS (	
	PERMISSION_ID NUMBER (30,0), 
	PERMISSION_NAME VARCHAR (255)
)
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;

CREATE TABLE PROVIDER_ROLE (
	PROVIDER_ID VARCHAR (255), 
	ROLE_NAME VARCHAR (255)
)
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;

CREATE TABLE ROLE_TYPES (
	ROLE_NAME VARCHAR (255)
)
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;

CREATE TABLE ROLES_PERMISSIONS (
	ROLE_NAME VARCHAR (255),
	PERMISSION_ID NUMBER (30,0)
)
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;

CREATE TABLE AGREEMENT (
	AGREEMENT_ID NUMBER (30,0) NOT NULL,
	PROVIDER_ID VARCHAR (255) NOT NULL,
	AGREEMENT_NAME VARCHAR (50),
	AGREEMENT_TYPE VARCHAR (20),	
	CREATED_TIME TIMESTAMP (6),
	LAST_MODIFIED TIMESTAMP (6),
	STATE VARCHAR (20)		
)
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;

CREATE TABLE AGREEMENT_META (
	AGREEMENT_ID NUMBER (30,0) NOT NULL,
	META VARCHAR (50) NOT NULL,
	VALUE VARCHAR (255)		
)
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;

CREATE TABLE SERVICE (
	SERVICE_ID NUMBER (30,0) NOT NULL,
	PROVIDER_ID VARCHAR (255) NOT NULL,
	SERVICE_NAME VARCHAR (20),
	SERVICE_TYPE VARCHAR (20),	
	AGREEMENT_ID NUMBER (30,0) NOT NULL,
	PASSWD VARCHAR (20)
)
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;

CREATE TABLE SERVICE_META (
	SERVICE_ID NUMBER (30,0) NOT NULL,
	META VARCHAR (50) NOT NULL,
	VALUE VARCHAR (255)	
)
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;
 
CREATE TABLE SETTLEMENT_IDENTIFIERS (
    EVENT_ID NUMBER (30,0) PRIMARY KEY,
    SERVICE_ID NUMBER (30,0),
    AGREEMENT_ID NUMBER (30,0),
    PROVIDER_ID VARCHAR (255),
    SERVICE_URI VARCHAR (50),
    SERVICE_NAME VARCHAR (50),
    PROVIDER_NAME VARCHAR (50)     
)
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;

CREATE TABLE COMMERCE_TRAIL (
	EVENT_ID NUMBER (30,0) NOT NULL,
	EVENT_TIMESTAMP TIMESTAMP (6),
	USER_ID NUMBER(30,0),
	EVENT_TYPE VARCHAR (20)
)
PARTITION BY HASH (EVENT_ID) PARTITIONS 32
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;
 
CREATE TABLE PURCHASE (
    EVENT_ID NUMBER (30,0) NOT NULL,
    PURCHASE_ID NUMBER (30,0) NOT NULL,
    RECURRENT_ID NUMBER (30,0),
    PURCHASE_TYPE VARCHAR (20),
    PRODUCT_ID VARCHAR (50),
    PRODUCT_DESCRIPTION VARCHAR (255),
    PRICE VARCHAR (10),
    VAT_PRICE VARCHAR (10),
    CURRENCY_CODE VARCHAR (20),
    VAT_CODE VARCHAR (2),
    PURCHASE_CREATED TIMESTAMP (6),
    RECURRENCE VARCHAR (1),
    RECURRENT_TRIAL VARCHAR (50),
    RECURRENT_PURCHASE_ID NUMBER (30,0),
    RECURRENT_PRODUCT_ID VARCHAR (50),
    PURCHASE_STATE VARCHAR (20),
    GIFT VARCHAR (1),
    CHARGED_USER_ID NUMBER(30,0),
    EXPIRY_DATE TIMESTAMP (6)
)
PARTITION BY HASH (EVENT_ID) PARTITIONS 32
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;
 
CREATE TABLE PURCHASE_META (
    EVENT_ID NUMBER (30,0) NOT NULL,
    PURCHASE_ID NUMBER (30,0) NOT NULL,
    META_KEY VARCHAR (50) NOT NULL,
    META_VALUE VARCHAR (255),
    TRANSACTION_ID VARCHAR (255)
)
PARTITION BY HASH (EVENT_ID) PARTITIONS 32
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;
 
CREATE TABLE TICKET (
    PURCHASE_ID NUMBER (30,0) NOT NULL,
    TICKET_ID VARCHAR (50) NOT NULL,
    TICKET_TYPE VARCHAR (20),
    TICKET_LIMIT VARCHAR (20),
    COUNT_TICKET NUMBER (10),
    DESCRIPTION_EN VARCHAR (255),
    STATE VARCHAR (20),
    RESOURCE_TYPE VARCHAR (50),
    EXPIRY TIMESTAMP(6),
    PRODUCT_ID VARCHAR (50),
    PROFILE VARCHAR(50)
)
PARTITION BY HASH (PURCHASE_ID) PARTITIONS 32
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;

CREATE TABLE TICKET_USAGE (
    TICKET_USAGE_ID NUMBER (30,0),
    EVENT_ID NUMBER (30,0),
    TICKET_ID VARCHAR (50),
    PURCHASE_ID NUMBER (30,0),
    DESCRIPTION_EN VARCHAR (255),
    CREATED TIMESTAMP(6),
    CONSUMED_UNITS VARCHAR (10)
)
PARTITION BY HASH (EVENT_ID) PARTITIONS 32
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;
 
CREATE TABLE SCHEDULED_REQUEST (
	ID NUMBER(30,0) NOT NULL,
	USERID NUMBER(30,0) NOT NULL,
	MSISDN VARCHAR(30) NOT NULL,
	JOBID VARCHAR(200) NOT NULL,
	REQUESTID VARCHAR(255),
	OFFERID VARCHAR(200) NOT NULL,
	PURCHASEID VARCHAR(30),
	LIFECYCLE_EVENT VARCHAR(30) NOT NULL,
	CREATED TIMESTAMP(6),
	UPDATED TIMESTAMP(6),
	RECURRENTTIME TIMESTAMP(6),
	EXPIRYTIME TIMESTAMP(6),
	STATUS VARCHAR(30),
	RESOURCEID  VARCHAR(30)
)
PARTITION BY HASH (ID) PARTITIONS 32
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;

CREATE TABLE SCHEDULED_REQUEST_META (
	SCHEDULED_REQUEST_ID NUMBER(30) NOT NULL,
	ATTRIBUTE_NAME VARCHAR (50) NOT NULL,
	ATTRIBUTE_VALUE VARCHAR (255),
	LAST_MODIFIED TIMESTAMP (6),
	CREATED TIMESTAMP (6)	
)
PARTITION BY HASH (SCHEDULED_REQUEST_ID) PARTITIONS 32
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;
 
CREATE TABLE CALLINGCIRCLE (
	APARTY VARCHAR (30), 
	BPARTY VARCHAR (30),
	PRODUCT_ID VARCHAR(255), 
	RELATIONSHIP VARCHAR(30), 
	PURCHASE_REFERENCE VARCHAR(50), 
	EXPIRY_TIME TIMESTAMP (6), 
	CREATION_TIME TIMESTAMP (6), 
	ID NUMBER(20,0), 
	DELETED NUMBER(20,0) DEFAULT 0
)
PARTITION BY HASH (ID) PARTITIONS 32
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;
---------------
 --QUARTZ
---------------
CREATE TABLE QRTZ_JOB_DETAILS (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    JOB_NAME  VARCHAR2(200) NOT NULL,
    JOB_GROUP VARCHAR2(200) NOT NULL,
    DESCRIPTION VARCHAR2(250) NULL,
    JOB_CLASS_NAME VARCHAR2(250) NOT NULL, 
    IS_DURABLE VARCHAR2(1) NOT NULL,
    IS_NONCONCURRENT VARCHAR2(1) NOT NULL,
    IS_UPDATE_DATA VARCHAR2(1) NOT NULL,
    REQUESTS_RECOVERY VARCHAR2(1) NOT NULL,
    JOB_DATA BLOB NULL,
    CONSTRAINT QRTZ_JOB_DETAILS_PK PRIMARY KEY (SCHED_NAME,JOB_NAME,JOB_GROUP)
)
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;
 
CREATE TABLE QRTZ_TRIGGERS (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    TRIGGER_NAME VARCHAR2(200) NOT NULL,
    TRIGGER_GROUP VARCHAR2(200) NOT NULL,
    JOB_NAME  VARCHAR2(200) NOT NULL, 
    JOB_GROUP VARCHAR2(200) NOT NULL,
    DESCRIPTION VARCHAR2(250) NULL,
    NEXT_FIRE_TIME NUMBER(13) NULL,
    PREV_FIRE_TIME NUMBER(13) NULL,
    PRIORITY NUMBER(13) NULL,
    TRIGGER_STATE VARCHAR2(16) NOT NULL,
    TRIGGER_TYPE VARCHAR2(8) NOT NULL,
    START_TIME NUMBER(13) NOT NULL,
    END_TIME NUMBER(13) NULL,
    CALENDAR_NAME VARCHAR2(200) NULL,
    MISFIRE_INSTR NUMBER(2) NULL,
    JOB_DATA BLOB NULL,
    CONSTRAINT QRTZ_TRIGGERS_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    CONSTRAINT QRTZ_TRIGGER_TO_JOBS_FK FOREIGN KEY (SCHED_NAME,JOB_NAME,JOB_GROUP) 
    	REFERENCES QRTZ_JOB_DETAILS(SCHED_NAME,JOB_NAME,JOB_GROUP) 
)
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;

CREATE TABLE QRTZ_SIMPLE_TRIGGERS (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    TRIGGER_NAME VARCHAR2(200) NOT NULL,
    TRIGGER_GROUP VARCHAR2(200) NOT NULL,
    REPEAT_COUNT NUMBER(7) NOT NULL,
    REPEAT_INTERVAL NUMBER(12) NOT NULL,
    TIMES_TRIGGERED NUMBER(10) NOT NULL,
    CONSTRAINT QRTZ_SIMPLE_TRIG_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    CONSTRAINT QRTZ_SIMPLE_TRIG_TO_TRIG_FK FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
	REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
)
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;

CREATE TABLE QRTZ_CRON_TRIGGERS (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    TRIGGER_NAME VARCHAR2(200) NOT NULL,
    TRIGGER_GROUP VARCHAR2(200) NOT NULL,
    CRON_EXPRESSION VARCHAR2(120) NOT NULL,
    TIME_ZONE_ID VARCHAR2(80),
    CONSTRAINT QRTZ_CRON_TRIG_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    CONSTRAINT QRTZ_CRON_TRIG_TO_TRIG_FK FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
      REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
)
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;

CREATE TABLE QRTZ_SIMPROP_TRIGGERS (          
    SCHED_NAME VARCHAR2(120) NOT NULL,
    TRIGGER_NAME VARCHAR2(200) NOT NULL,
    TRIGGER_GROUP VARCHAR2(200) NOT NULL,
    STR_PROP_1 VARCHAR2(512) NULL,
    STR_PROP_2 VARCHAR2(512) NULL,
    STR_PROP_3 VARCHAR2(512) NULL,
    INT_PROP_1 NUMBER(10) NULL,
    INT_PROP_2 NUMBER(10) NULL,
    LONG_PROP_1 NUMBER(13) NULL,
    LONG_PROP_2 NUMBER(13) NULL,
    DEC_PROP_1 NUMERIC(13,4) NULL,
    DEC_PROP_2 NUMERIC(13,4) NULL,
    BOOL_PROP_1 VARCHAR2(1) NULL,
    BOOL_PROP_2 VARCHAR2(1) NULL,
    CONSTRAINT QRTZ_SIMPROP_TRIG_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    CONSTRAINT QRTZ_SIMPROP_TRIG_TO_TRIG_FK FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
      REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
)
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;
 
CREATE TABLE QRTZ_BLOB_TRIGGERS (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    TRIGGER_NAME VARCHAR2(200) NOT NULL,
    TRIGGER_GROUP VARCHAR2(200) NOT NULL,
    BLOB_DATA BLOB NULL,
    CONSTRAINT QRTZ_BLOB_TRIG_PK PRIMARY KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP),
    CONSTRAINT QRTZ_BLOB_TRIG_TO_TRIG_FK FOREIGN KEY (SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) 
        REFERENCES QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP)
)
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;

CREATE TABLE QRTZ_CALENDARS (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    CALENDAR_NAME  VARCHAR2(200) NOT NULL, 
    CALENDAR BLOB NOT NULL,
    CONSTRAINT QRTZ_CALENDARS_PK PRIMARY KEY (SCHED_NAME,CALENDAR_NAME)
)
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;

CREATE TABLE QRTZ_PAUSED_TRIGGER_GRPS (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    TRIGGER_GROUP  VARCHAR2(200) NOT NULL, 
    CONSTRAINT QRTZ_PAUSED_TRIG_GRPS_PK PRIMARY KEY (SCHED_NAME,TRIGGER_GROUP)
)
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;
 
CREATE TABLE QRTZ_FIRED_TRIGGERS (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    ENTRY_ID VARCHAR2(95) NOT NULL,
    TRIGGER_NAME VARCHAR2(200) NOT NULL,
    TRIGGER_GROUP VARCHAR2(200) NOT NULL,
    INSTANCE_NAME VARCHAR2(200) NOT NULL,
    FIRED_TIME NUMBER(13) NOT NULL,
    SCHED_TIME NUMBER(13) NOT NULL,
    PRIORITY NUMBER(13) NOT NULL,
    STATE VARCHAR2(16) NOT NULL,
    JOB_NAME VARCHAR2(200) NULL,
    JOB_GROUP VARCHAR2(200) NULL,
    IS_NONCONCURRENT VARCHAR2(1) NULL,
    REQUESTS_RECOVERY VARCHAR2(1) NULL,
    CONSTRAINT QRTZ_FIRED_TRIGGER_PK PRIMARY KEY (SCHED_NAME,ENTRY_ID)
)
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;
 
CREATE TABLE QRTZ_SCHEDULER_STATE (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    INSTANCE_NAME VARCHAR2(200) NOT NULL,
    LAST_CHECKIN_TIME NUMBER(13) NOT NULL,
    CHECKIN_INTERVAL NUMBER(13) NOT NULL,
    CONSTRAINT QRTZ_SCHEDULER_STATE_PK PRIMARY KEY (SCHED_NAME,INSTANCE_NAME)
)
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;

CREATE TABLE QRTZ_LOCKS (
    SCHED_NAME VARCHAR2(120) NOT NULL,
    LOCK_NAME  VARCHAR2(40) NOT NULL, 
    CONSTRAINT QRTZ_LOCKS_PK PRIMARY KEY (SCHED_NAME,LOCK_NAME)
) 
 TABLESPACE TNT_DATA
 PCTUSED    0
 PCTFREE    30
 INITRANS   8
 MAXTRANS   255
 STORAGE    (
             INITIAL          1M
             NEXT             25M
             MINEXTENTS       1
             MAXEXTENTS       UNLIMITED
             PCTINCREASE      0
             BUFFER_POOL      DEFAULT
            )
 LOGGING 
 NOCOMPRESS 
 NOCACHE
 NOPARALLEL
 MONITORING;
 
--INDEXES
CREATE INDEX SUBSCRIBER_PK_IDX ON SUBSCRIBER(USER_ID) GLOBAL PARTITION BY HASH (USER_ID) PARTITIONS 32 PCTFREE 40 INITRANS 16 TABLESPACE TNT_DATA;
ALTER TABLE SUBSCRIBER ADD CONSTRAINT SUBSCRIBER_PK PRIMARY KEY (USER_ID) USING INDEX SUBSCRIBER_PK_IDX;

CREATE INDEX UMSISDN_IDX ON SUBSCRIBER(MSISDN, DELETED) GLOBAL PARTITION BY HASH (MSISDN) PARTITIONS 32 PCTFREE 40 INITRANS 16 TABLESPACE TNT_DATA;
ALTER TABLE SUBSCRIBER ADD CONSTRAINT UMSISDN UNIQUE (MSISDN, DELETED) USING INDEX UMSISDN_IDX;

CREATE INDEX SUBSCRIBER_META_PK_IDX ON SUBSCRIBER_META(USER_ID,ATTRIBUTE_NAME) GLOBAL PARTITION BY HASH (USER_ID) PARTITIONS 32 PCTFREE 40 INITRANS 16 TABLESPACE TNT_DATA;
ALTER TABLE SUBSCRIBER_META ADD CONSTRAINT SUBSCRIBER_META_PK PRIMARY KEY (USER_ID,ATTRIBUTE_NAME) USING INDEX SUBSCRIBER_META_PK_IDX;

ALTER TABLE SUBSCRIBER_META ADD CONSTRAINT FK_SM_USER_ID FOREIGN KEY (USER_ID) REFERENCES SUBSCRIBER(USER_ID);
ALTER TABLE SUBSCRIBER_HISTORY ADD CONSTRAINT FK_SH_USER_ID FOREIGN KEY (USER_ID) REFERENCES SUBSCRIBER(USER_ID);

CREATE INDEX COMMERCE_TRAIL_PK_IDX ON COMMERCE_TRAIL(EVENT_ID) GLOBAL PARTITION BY HASH (EVENT_ID) PARTITIONS 32 PCTFREE 40 INITRANS 16 TABLESPACE TNT_DATA;
ALTER TABLE COMMERCE_TRAIL ADD CONSTRAINT COMMERCE_TRAIL_PK PRIMARY KEY (EVENT_ID) USING INDEX COMMERCE_TRAIL_PK_IDX;
ALTER TABLE COMMERCE_TRAIL ADD CONSTRAINT FK_COMMERCE_TRAIL_USER_ID FOREIGN KEY (USER_ID) REFERENCES SUBSCRIBER(USER_ID);

CREATE INDEX PURCHASE_PK_IDX ON PURCHASE(EVENT_ID,PURCHASE_ID) GLOBAL PARTITION BY HASH (EVENT_ID) PARTITIONS 32 PCTFREE 40 INITRANS 16 TABLESPACE TNT_DATA;
ALTER TABLE PURCHASE ADD CONSTRAINT PURCHASE_PK PRIMARY KEY (EVENT_ID,PURCHASE_ID) USING INDEX PURCHASE_PK_IDX;
ALTER TABLE PURCHASE ADD CONSTRAINT FK_PURCHASE_EVENT_ID FOREIGN KEY (EVENT_ID) REFERENCES COMMERCE_TRAIL(EVENT_ID);

CREATE INDEX PURCHASE_META_PK_IDX ON PURCHASE_META(PURCHASE_ID,META_KEY) GLOBAL PARTITION BY HASH (PURCHASE_ID) PARTITIONS 32 PCTFREE 40 INITRANS 16 TABLESPACE TNT_DATA;
ALTER TABLE PURCHASE_META ADD CONSTRAINT PURCHASE_META_PK PRIMARY KEY (PURCHASE_ID,META_KEY) USING INDEX PURCHASE_META_PK_IDX;
ALTER TABLE PURCHASE_META ADD CONSTRAINT FK_PURCHASE_META_PURCHASE_ID FOREIGN KEY (PURCHASE_ID,EVENT_ID) REFERENCES PURCHASE(PURCHASE_ID,EVENT_ID);

CREATE INDEX TICKET_PK_IDX ON TICKET(PURCHASE_ID,TICKET_ID) GLOBAL PARTITION BY HASH (PURCHASE_ID) PARTITIONS 32 PCTFREE 40 INITRANS 16 TABLESPACE TNT_DATA;
ALTER TABLE TICKET ADD CONSTRAINT TICKET_PK PRIMARY KEY (PURCHASE_ID,TICKET_ID) USING INDEX TICKET_PK_IDX;

CREATE INDEX SCHEDULED_REQUEST_PK_IDX ON SCHEDULED_REQUEST(ID) GLOBAL PARTITION BY HASH (ID) PARTITIONS 32 PCTFREE 40 INITRANS 16 TABLESPACE TNT_DATA;
ALTER TABLE SCHEDULED_REQUEST ADD CONSTRAINT SCHEDULED_REQUEST_PK PRIMARY KEY (ID) USING INDEX SCHEDULED_REQUEST_PK_IDX;

CREATE INDEX SCHEDULED_REQUEST_META_PK_IDX ON SCHEDULED_REQUEST_META(SCHEDULED_REQUEST_ID,ATTRIBUTE_NAME) GLOBAL PARTITION BY HASH (SCHEDULED_REQUEST_ID) PARTITIONS 32 PCTFREE 40 INITRANS 16 TABLESPACE TNT_DATA;
ALTER TABLE SCHEDULED_REQUEST_META ADD CONSTRAINT SCHEDULED_REQUEST_META_PK PRIMARY KEY (SCHEDULED_REQUEST_ID,ATTRIBUTE_NAME) USING INDEX SCHEDULED_REQUEST_META_PK_IDX;
ALTER TABLE SCHEDULED_REQUEST_META ADD CONSTRAINT FK_SCHEDULED_REQUEST_ID FOREIGN KEY (SCHEDULED_REQUEST_ID) REFERENCES SCHEDULED_REQUEST(ID);

CREATE INDEX CALLINGCIRCLE_PK_IDX ON CALLINGCIRCLE(ID) GLOBAL PARTITION BY HASH (ID) PARTITIONS 32 PCTFREE 40 INITRANS 16 TABLESPACE TNT_DATA;
ALTER TABLE CALLINGCIRCLE ADD CONSTRAINT CALLINGCIRCLE_PK PRIMARY KEY (ID) USING INDEX CALLINGCIRCLE_PK_IDX;
ALTER TABLE CALLINGCIRCLE ADD CONSTRAINT CALLINGCIRCLE_UK UNIQUE (APARTY, BPARTY, PRODUCT_ID, RELATIONSHIP, DELETED, PURCHASE_REFERENCE);

ALTER TABLE TICKET_USAGE ADD CONSTRAINT TICKET_USAGE_PK PRIMARY KEY (TICKET_ID, EVENT_ID);
ALTER TABLE TICKET_USAGE ADD CONSTRAINT FK_TICKET_USAGE_PURCHASE_ID FOREIGN KEY (PURCHASE_ID,EVENT_ID) REFERENCES PURCHASE(PURCHASE_ID,EVENT_ID);

ALTER TABLE PROVIDER ADD CONSTRAINT PROVIDER_PK PRIMARY KEY (PROVIDER_ID);
ALTER TABLE PROVIDER_META ADD CONSTRAINT PROVIDERMETA_PK PRIMARY KEY (PROVIDER_ID,META);
ALTER TABLE PROVIDER_META ADD CONSTRAINT FK_PM_PROVIDER_ID FOREIGN KEY (PROVIDER_ID) REFERENCES PROVIDER(PROVIDER_ID);
ALTER TABLE PROVIDER_PERMISSIONS ADD CONSTRAINT PROVIDER_PERMISSIONS_PK PRIMARY KEY (PERMISSION_ID);
ALTER TABLE PROVIDER_ROLE ADD CONSTRAINT PROVIDER_ROLE_UK UNIQUE (PROVIDER_ID,ROLE_NAME);
ALTER TABLE AGREEMENT ADD CONSTRAINT AGREEMENT_PK PRIMARY KEY (AGREEMENT_ID);
ALTER TABLE AGREEMENT ADD CONSTRAINT FK_AGG_PROVIDER_ID FOREIGN KEY (PROVIDER_ID) REFERENCES PROVIDER(PROVIDER_ID);
ALTER TABLE AGREEMENT_META ADD CONSTRAINT AGREEMENTMETA_PK PRIMARY KEY (AGREEMENT_ID,META);
ALTER TABLE AGREEMENT_META ADD CONSTRAINT FK_AM_AGREEMENT_ID FOREIGN KEY (AGREEMENT_ID) REFERENCES AGREEMENT(AGREEMENT_ID);
ALTER TABLE SERVICE ADD CONSTRAINT SERVICE_PK PRIMARY KEY (SERVICE_ID);
ALTER TABLE SERVICE ADD CONSTRAINT FK_SERVICE_PROVIDER_ID FOREIGN KEY (PROVIDER_ID) REFERENCES PROVIDER(PROVIDER_ID);
ALTER TABLE SERVICE ADD CONSTRAINT FK_SERVICE_AGREEMENT_ID FOREIGN KEY (AGREEMENT_ID) REFERENCES AGREEMENT(AGREEMENT_ID);
ALTER TABLE SERVICE_META ADD CONSTRAINT SERVICEMETA_PK PRIMARY KEY (SERVICE_ID,META);		
ALTER TABLE SERVICE_META ADD CONSTRAINT FK_SM_SERVICE_ID FOREIGN KEY (SERVICE_ID) REFERENCES SERVICE(SERVICE_ID);

--QUARTZ
CREATE INDEX IDX_QRTZ_J_REQ_RECOVERY ON QRTZ_JOB_DETAILS(SCHED_NAME,REQUESTS_RECOVERY) PCTFREE 40 INITRANS 16 TABLESPACE TNT_DATA;
CREATE INDEX IDX_QRTZ_J_GRP ON QRTZ_JOB_DETAILS(SCHED_NAME,JOB_GROUP) PCTFREE 40 INITRANS 16 TABLESPACE TNT_DATA;
CREATE INDEX IDX_QRTZ_T_J ON QRTZ_TRIGGERS(SCHED_NAME,JOB_NAME,JOB_GROUP) PCTFREE 40 INITRANS 16 TABLESPACE TNT_DATA;
CREATE INDEX IDX_QRTZ_T_JG ON QRTZ_TRIGGERS(SCHED_NAME,JOB_GROUP) PCTFREE 40 INITRANS 16 TABLESPACE TNT_DATA;
CREATE INDEX IDX_QRTZ_T_C ON QRTZ_TRIGGERS(SCHED_NAME,CALENDAR_NAME) PCTFREE 40 INITRANS 16 TABLESPACE TNT_DATA;
CREATE INDEX IDX_QRTZ_T_G ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_GROUP) PCTFREE 40 INITRANS 16 TABLESPACE TNT_DATA;
CREATE INDEX IDX_QRTZ_T_STATE ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_STATE) PCTFREE 40 INITRANS 16 TABLESPACE TNT_DATA;
CREATE INDEX IDX_QRTZ_T_N_STATE ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_STATE) PCTFREE 40 INITRANS 16 TABLESPACE TNT_DATA;
CREATE INDEX IDX_QRTZ_T_N_G_STATE ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_GROUP,TRIGGER_STATE) PCTFREE 40 INITRANS 16 TABLESPACE TNT_DATA;
CREATE INDEX IDX_QRTZ_T_NEXT_FIRE_TIME ON QRTZ_TRIGGERS(SCHED_NAME,NEXT_FIRE_TIME) PCTFREE 40 INITRANS 16 TABLESPACE TNT_DATA;
CREATE INDEX IDX_QRTZ_T_NFT_ST ON QRTZ_TRIGGERS(SCHED_NAME,TRIGGER_STATE,NEXT_FIRE_TIME) PCTFREE 40 INITRANS 16 TABLESPACE TNT_DATA;
CREATE INDEX IDX_QRTZ_T_NFT_MISFIRE ON QRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME) PCTFREE 40 INITRANS 16 TABLESPACE TNT_DATA;
CREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE ON QRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_STATE) PCTFREE 40 INITRANS 16 TABLESPACE TNT_DATA;
CREATE INDEX IDX_QRTZ_T_NFT_ST_MISFIRE_GRP ON QRTZ_TRIGGERS(SCHED_NAME,MISFIRE_INSTR,NEXT_FIRE_TIME,TRIGGER_GROUP,TRIGGER_STATE) PCTFREE 40 INITRANS 16 TABLESPACE TNT_DATA;
CREATE INDEX IDX_QRTZ_FT_TRIG_INST_NAME ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,INSTANCE_NAME) PCTFREE 40 INITRANS 16 TABLESPACE TNT_DATA;
CREATE INDEX IDX_QRTZ_FT_INST_JOB_REQ_RCVRY ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,INSTANCE_NAME,REQUESTS_RECOVERY) PCTFREE 40 INITRANS 16 TABLESPACE TNT_DATA;
CREATE INDEX IDX_QRTZ_FT_J_G ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,JOB_NAME,JOB_GROUP) PCTFREE 40 INITRANS 16 TABLESPACE TNT_DATA;
CREATE INDEX IDX_QRTZ_FT_JG ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,JOB_GROUP) PCTFREE 40 INITRANS 16 TABLESPACE TNT_DATA;
CREATE INDEX IDX_QRTZ_FT_T_G ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,TRIGGER_NAME,TRIGGER_GROUP) PCTFREE 40 INITRANS 16 TABLESPACE TNT_DATA;
CREATE INDEX IDX_QRTZ_FT_TG ON QRTZ_FIRED_TRIGGERS(SCHED_NAME,TRIGGER_GROUP) PCTFREE 40 INITRANS 16 TABLESPACE TNT_DATA; 

BEGIN  
	DBMS_ERRLOG.CREATE_ERROR_LOG('SUBSCRIBER', 'ERR$_SUBSCRIBER', NULL, NULL, TRUE);
	DBMS_ERRLOG.CREATE_ERROR_LOG('SUBSCRIBER_META', 'ERR$_SUBSCRIBER_META', NULL, NULL, TRUE);
	DBMS_ERRLOG.CREATE_ERROR_LOG('SUBSCRIBER_HISTORY', 'ERR$_SUBSCRIBER_HISTORY', NULL, NULL, TRUE);
	DBMS_ERRLOG.CREATE_ERROR_LOG('PROVIDER', 'ERR$_PROVIDER', NULL, NULL, TRUE);
	DBMS_ERRLOG.CREATE_ERROR_LOG('PROVIDER_META', 'ERR$_PROVIDER_META', NULL, NULL, TRUE);
	DBMS_ERRLOG.CREATE_ERROR_LOG('AGREEMENT', 'ERR$_AGREEMENT', NULL, NULL, TRUE);
	DBMS_ERRLOG.CREATE_ERROR_LOG('AGREEMENT_META', 'ERR$_AGREEMENT_META', NULL, NULL, TRUE);
	DBMS_ERRLOG.CREATE_ERROR_LOG('SERVICE', 'ERR$_SERVICE', NULL, NULL, TRUE);
	DBMS_ERRLOG.CREATE_ERROR_LOG('SERVICE_META', 'ERR$_SERVICE_META', NULL, NULL, TRUE);
	DBMS_ERRLOG.CREATE_ERROR_LOG('SETTLEMENT_IDENTIFIERS', 'ERR$_SETTLEMENT_IDENTIFIERS', NULL, NULL, TRUE);
	DBMS_ERRLOG.CREATE_ERROR_LOG('COMMERCE_TRAIL', 'ERR$_COMMERCE_TRAIL', NULL, NULL, TRUE);
	DBMS_ERRLOG.CREATE_ERROR_LOG('PURCHASE', 'ERR$_PURCHASE', NULL, NULL, TRUE);
	DBMS_ERRLOG.CREATE_ERROR_LOG('PURCHASE_META', 'ERR$_PURCHASE_META', NULL, NULL, TRUE);
	DBMS_ERRLOG.CREATE_ERROR_LOG('TICKET', 'ERR$_TICKET', NULL, NULL, TRUE);
	DBMS_ERRLOG.CREATE_ERROR_LOG('TICKET_USAGE', 'ERR$_TICKET_USAGE', NULL, NULL, TRUE);
	DBMS_ERRLOG.CREATE_ERROR_LOG('SCHEDULED_REQUEST', 'ERR$_SCHEDULED_REQUEST', NULL, NULL, TRUE);
	DBMS_ERRLOG.CREATE_ERROR_LOG('SCHEDULED_REQUEST_META', 'ERR$_SCHEDULED_REQUEST_META', NULL, NULL, TRUE);
	DBMS_ERRLOG.CREATE_ERROR_LOG('QRTZ_JOB_DETAILS', 'ERR$_QRTZ_JOB_DETAILS', NULL, NULL, TRUE);
	DBMS_ERRLOG.CREATE_ERROR_LOG('QRTZ_TRIGGERS', 'ERR$_QRTZ_TRIGGERS', NULL, NULL, TRUE);
	DBMS_ERRLOG.CREATE_ERROR_LOG('QRTZ_SIMPLE_TRIGGERS', 'ERR$_QRTZ_SIMPLE_TRIGGERS', NULL, NULL, TRUE);
	DBMS_ERRLOG.CREATE_ERROR_LOG('QRTZ_CRON_TRIGGERS', 'ERR$_QRTZ_CRON_TRIGGERS', NULL, NULL, TRUE);
	DBMS_ERRLOG.CREATE_ERROR_LOG('QRTZ_SIMPROP_TRIGGERS', 'ERR$_QRTZ_SIMPROP_TRIGGERS', NULL, NULL, TRUE);
	DBMS_ERRLOG.CREATE_ERROR_LOG('QRTZ_BLOB_TRIGGERS', 'ERR$_QRTZ_BLOB_TRIGGERS', NULL, NULL, TRUE);
	DBMS_ERRLOG.CREATE_ERROR_LOG('QRTZ_CALENDARS', 'ERR$_QRTZ_CALENDARS', NULL, NULL, TRUE);
	DBMS_ERRLOG.CREATE_ERROR_LOG('QRTZ_PAUSED_TRIGGER_GRPS', 'ERR$_QRTZ_PAUSED_TRIGGER_GRPS', NULL, NULL, TRUE);
	DBMS_ERRLOG.CREATE_ERROR_LOG('QRTZ_FIRED_TRIGGERS', 'ERR$_QRTZ_FIRED_TRIGGERS', NULL, NULL, TRUE);
	DBMS_ERRLOG.CREATE_ERROR_LOG('QRTZ_SCHEDULER_STATE', 'ERR$_QRTZ_SCHEDULER_STATE', NULL, NULL, TRUE);
	DBMS_ERRLOG.CREATE_ERROR_LOG('QRTZ_LOCKS', 'ERR$_QRTZ_LOCKS', NULL, NULL, TRUE);
END;