package com.nsn.ossbss.charge_once.wsdl.entity.tis.wsdl._1;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * The location defined in soap:address is never used and has no relevance. It
 * serves as a pattern for the SOAP request to see how it could look like
 *     
 *
 * This class was generated by Apache CXF 2.6.0.redhat-60024
 * 2013-07-17T22:30:35.436+08:00
 * Generated source version: 2.6.0.redhat-60024
 * 
 */
@WebServiceClient(name = "TisService", 
                  wsdlLocation = "file:/Users/deepakc/workspace/ericsson/smartTnT/smartTnT-apis/subscriber-manager-api/src/main/resources/wsdl/TisService.xml",
                  targetNamespace = "http://nsn.com/ossbss/charge.once/wsdl/entity/Tis/wsdl/1") 
public class TisService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://nsn.com/ossbss/charge.once/wsdl/entity/Tis/wsdl/1", "TisService");
    public final static QName TisSoapPort = new QName("http://nsn.com/ossbss/charge.once/wsdl/entity/Tis/wsdl/1", "TisSoapPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/Users/deepakc/workspace/ericsson/smartTnT/smartTnT-apis/subscriber-manager-api/src/main/resources/wsdl/TisService.xml");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(TisService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/Users/deepakc/workspace/ericsson/smartTnT/smartTnT-apis/subscriber-manager-api/src/main/resources/wsdl/TisService.xml");
        }
        WSDL_LOCATION = url;
    }

    public TisService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public TisService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public TisService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns TisInterface
     */
    @WebEndpoint(name = "TisSoapPort")
    public TisInterface getTisSoapPort() {
        return super.getPort(TisSoapPort, TisInterface.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TisInterface
     */
    @WebEndpoint(name = "TisSoapPort")
    public TisInterface getTisSoapPort(WebServiceFeature... features) {
        return super.getPort(TisSoapPort, TisInterface.class, features);
    }

}
